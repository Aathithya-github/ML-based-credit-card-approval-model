# -*- coding: utf-8 -*-
"""credit card_knn_CA3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t5v_BRVcHQxfaux4ummL94isoWf5ULH7
"""

import pandas as pd
from sklearn import datasets
import matplotlib.pyplot as plt
import numpy as np

dataset = pd.read_csv('/content/clean_dataset (1).csv')
dataset.head(5)

#Dropping the output column and the columns from the dataset which have binary values (0 or 1)
dset_modified = dataset.drop(['Married','Gender','PriorDefault','Employed','CreditScore','DriversLicense','Citizen','Approved'],axis=1) # dataset without class feature
data_set_feat = pd.DataFrame(dset_modified,columns=['Age','Debt','YearsEmployed','ZipCode','Income',])
data_set_feat

#Splitting the dataset into testing and training parts
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(data_set_feat,dataset['Married'], test_size = 0.20, random_state = 0)

from sklearn import svm
from sklearn.metrics import accuracy_score
model1 = svm.SVC(kernel='linear') #Linear Kernel
model2 = svm.SVC(kernel='rbf') #RBF Kernel
model3 = svm.SVC(kernel='poly') #Polynomial Kernel
model4 = svm.SVC(kernel='sigmoid') #Sigmoid Kernel
model5 = svm.SVC(gamma=10)
model6 = svm.SVC(gamma=10,C=1)

model1.fit(X_train,y_train)
model2.fit(X_train,y_train)
model3.fit(X_train,y_train)
model4.fit(X_train,y_train)
model5.fit(X_train,y_train)
model6.fit(X_train,y_train)

y_predModel1 = model1.predict(X_test)
y_predModel2 = model2.predict(X_test)
y_predModel3 = model3.predict(X_test)
y_predModel4 = model4.predict(X_test)
y_predModel5 = model5.predict(X_test)
y_predModel6 = model6.predict(X_test)

print("Accuracy of the Model 1: {0}%".format(accuracy_score(y_test, y_predModel1)*100))
print("Accuracy of the Model 2: {0}%".format(accuracy_score(y_test, y_predModel2)*100))
print("Accuracy of the Model 3: {0}%".format(accuracy_score(y_test, y_predModel3)*100))
print("Accuracy of the Model 4: {0}%".format(accuracy_score(y_test, y_predModel4)*100))
print("Accuracy of the Model 5: {0}%".format(accuracy_score(y_test, y_predModel5)*100))
print("Accuracy of the Model 6: {0}%".format(accuracy_score(y_test, y_predModel6)*100))